{"version":3,"sources":["components/atoms/icon/icon.tsx","api.ts","components/atoms/temp/tempBg.tsx","components/atoms/temp/temp.tsx","components/atoms/graph/graph.tsx","components/atoms/popUp/popUp.tsx","components/atoms/city/city.tsx","components/atoms/search/searchBox.tsx","components/atoms/navBar/navBar.tsx","components/atoms/forecast/forecast.tsx","components/atoms/tabs/tabs.tsx","components/molecules/weather/weather.tsx","components/pages/landing.tsx","components/pages/search.tsx","components/routes.tsx","App.tsx","serviceWorker.ts","index.tsx","image/paris.jpg","image/nyc.jpg","image/berlin.jpg","image/myAvatar.png"],"names":["ConditionIcon","iconClear","API_KEY","BASE_URL","api","today","callback","lat","long","fetch","then","response","json","res","forecast","find","search","TempBg","className","size","Icon","props","type","indexOf","color","condition","Temp","sunrise","Date","sunriseHour","getHours","hours","sunriseMinutes","getMinutes","minutes","sunset","sunsetHour","sunsetMinutes","Container","fluid","Row","Col","xs","icon","day","date","month","Math","round","temp","city","country","feel","Graph","pressure","MinTemp","minTemp","MaxTemp","maxTemp","minPerc","maxPerc","style","height","wind","humidity","PopUp","onClick","pop","message","City","useState","state","setState","Paris","NYC","Berlin","to","undefined","num","lon","src","img","alt","SearchBox","data","unclicked","length","noResult","sys","map","item","coord","name","NavBar","changed","clicked","click","setClick","setSearch","getPop","setPop","code","count","setData","msg","setMsg","msg1","msg2","href","target","rel","popUp","entering","e","charCode","preventDefault","cod","sm","span","placeholder","onChange","value","onKeyPress","Dropdown","Toggle","variant","id","Menu","Item","require","list","FullDay","min","max","Forecast","i","splice","push","main","temp_min","temp_max","index","weather","width","TabView","Tabs","defaultActiveKey","Tab","eventKey","title","DAY","MONTH","Weather","found","this","zoneHours","floor","timezone","zoneMinutes","todayUTC","getTime","toUTCString","replace","getDay","getDate","getMonth","lg","margin","feels_like","speed","Component","Landing","longitude","latitude","watch","counter","navigator","geolocation","watchPosition","position","coords","error","console","log","clearWatch","Search","parseFloat","match","params","Routes","exact","path","component","App","Boolean","window","location","hostname","ReactDOM","render","basename","process","document","getElementById","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.9599c50a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Cloud} from \"styled-icons/fa-solid/Cloud\";\r\nimport {CloudRain} from \"styled-icons/fa-solid/CloudRain\";\r\nimport {Sun} from \"styled-icons/fa-solid/Sun\";\r\nimport {Moon} from \"styled-icons/fa-solid/Moon\";\r\nimport {CloudLightning} from \"styled-icons/boxicons-solid/CloudLightning\";\r\nimport {Foggy} from \"styled-icons/remix-fill/Foggy\";\r\nimport {Snowflake} from \"styled-icons/fa-regular/Snowflake\";\r\nimport {Drizzle} from \"styled-icons/remix-fill/Drizzle\";\r\n\r\ninterface IProps{\r\n    type: string;\r\n    condition: string;\r\n    size: string;\r\n}\r\n\r\nlet ConditionIcon: JSX.Element;\r\nlet iconClear: JSX.Element;\r\n\r\n\r\nconst Icon: React.FC<IProps>=(props)=>{\r\n\r\n    /// sun/moon icon for clear day/night\r\n    if(props.type.indexOf(\"d\")>-1){\r\n        iconClear = <Sun color=\"#f6c300\"  size={props.size}/>\r\n    }else{\r\n        iconClear = <Moon color=\"#4394ec\"  size={props.size}/>\r\n    }\r\n\r\n    //// icon\r\n    switch(props.condition){\r\n        case \"Thunderstorm\":\r\n            ConditionIcon = <CloudLightning color=\"#000053\" size={props.size}/>\r\n            break;\r\n        case \"Drizzle\":\r\n            ConditionIcon = <Drizzle color=\"#4394ec\"  size={props.size}/>\r\n            break;\r\n        case \"Rain\":\r\n            ConditionIcon = <CloudRain color=\"#4394ec\"  size={props.size}/>\r\n            break;\r\n        case \"Snow\":\r\n            ConditionIcon = <Snowflake color=\"#d1e4f8\"  size={props.size}/>\r\n            break;\r\n        case \"Clear\":\r\n            ConditionIcon = iconClear\r\n            break;\r\n        case \"Clouds\":\r\n            ConditionIcon = <Cloud  color=\"#4394ec\" size={props.size}/>\r\n            break;\r\n        default:\r\n            ConditionIcon = <Foggy color=\"#d1e4f8\" size={props.size}/>\r\n            break;\r\n    }\r\n\r\n    return(\r\n        <div>{ConditionIcon}</div>\r\n    )\r\n}\r\n\r\nexport default Icon;\r\n","const API_KEY = \"585205b943a316d3502569db71a3fca9\";\r\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\r\n\r\nlet api = { \r\n    today: function(callback:(res:any)=>void ,lat:number, long:number){\r\n            fetch(BASE_URL+\"weather?lat=\"+lat+\"&lon=\"+long+\"&appid=\"+API_KEY).then(response => response.json()).then(res=>{\r\n                callback(res);\r\n            });\r\n    },\r\n    forecast: function(callback:(res:any)=>void ,lat:number, long:number){\r\n        fetch(BASE_URL+\"forecast?lat=\"+lat+\"&lon=\"+long+\"&appid=\"+API_KEY).then(response => response.json()).then(response => {\r\n            callback(response);\r\n        });\r\n    },\r\n    find: function(callback:(res:any)=>void ,search:string){\r\n        fetch(BASE_URL+\"find?q=\"+search+\"&appid=\"+API_KEY).then(response => response.json()).then(response => {\r\n            callback(response);\r\n        });\r\n    }\r\n}\r\n\r\nexport default api;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Cloud} from \"styled-icons/fa-solid/Cloud\";\r\nimport './tempBg.scss';\r\n\r\nconst TempBg: React.SFC=()=>{\r\n    return(\r\n        <span className=\"bgMain\">\r\n            <span><Cloud size=\"80\"/></span>\r\n            <span><Cloud size=\"120\"/></span>\r\n            <span><Cloud size=\"60\"/></span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default TempBg;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport \"./temp.scss\";\r\nimport TempBg from './tempBg';\r\nimport Icon from '../icon/icon';\r\n\r\n\r\n\r\ninterface IProps{\r\n    temp:number;\r\n    city: string;\r\n    country: string;\r\n    feel: number;\r\n    icon: string;\r\n    sunset:number;\r\n    sunrise:number;\r\n    condition: string;\r\n    date:number;\r\n    minutes: number;\r\n    hours: number;\r\n}\r\n\r\ninterface IDayMonth{\r\n    day: string;\r\n    month: string;\r\n}\r\n\r\n\r\n\r\nconst Temp: React.FC<IProps & IDayMonth>=(props)=>{\r\n\r\n    //// sunrise\r\n    var sunrise = new Date (props.sunrise);\r\n    var sunriseHour = sunrise.getHours()+props.hours;\r\n    var sunriseMinutes = sunrise.getMinutes()+props.minutes;\r\n\r\n    sunriseHour = sunriseHour % 12;\r\n    sunriseHour = sunriseHour ? sunriseHour : 12;\r\n    if(sunriseMinutes > 60){\r\n        sunriseHour++;\r\n        sunriseMinutes = sunriseMinutes -60;\r\n    }\r\n\r\n    //// sunset\r\n    var sunset = new Date (props.sunset);\r\n    var sunsetHour = sunset.getHours()+props.hours;\r\n    var sunsetMinutes = sunset.getMinutes()+props.minutes;\r\n\r\n    sunsetHour = sunsetHour % 12;\r\n    sunsetHour = sunsetHour ? sunsetHour : 12;\r\n    if(sunsetMinutes > 60){\r\n        sunsetHour++;\r\n        sunsetMinutes = sunsetMinutes -60;\r\n    }\r\n\r\n    return(\r\n        <Container fluid className=\"temp\">\r\n            <Row className=\"tempRow\">\r\n                <TempBg/>\r\n                <Col className=\"todayRow\" xs={12}>\r\n                    <table className=\"box\">\r\n                        <tbody>\r\n                        <tr>\r\n                            <td className=\"icon\">\r\n                                <Icon condition={props.condition} size=\"30\" type={props.icon}/>\r\n                            </td>\r\n                            <td className=\"todayTd\">\r\n                                <span className=\"today\">Today</span> <br/>\r\n                                <span className=\"date\">{props.day+\", \"+ props.date+\" \"+ props.month}</span>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n\r\n                <Col xs={12} className=\"infoCol\">\r\n                    <span className=\"temperature\">\r\n                        {Math.round(props.temp-273.15)}\r\n                        <sup className=\"degree\">&deg;C</sup>\r\n                    </span>\r\n                    <p>{props.city+\", \"+props.country}</p>\r\n                    <p className=\"feelsRise\">\r\n                        {\"Feels like \"+Math.round(props.feel-273.15)}<span>-</span>\r\n                        {(props.icon.indexOf(\"d\")>0 ? \"Sunset \"+sunsetHour+\":\"+sunsetMinutes : \"Sunrise \"+sunriseHour+\":\"+sunriseMinutes)}\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Temp;","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport {Tachometer} from '@styled-icons/boxicons-regular/Tachometer';\r\nimport {ThermometerFull} from '@styled-icons/fa-solid/ThermometerFull';\r\nimport {ThermometerEmpty} from '@styled-icons/fa-solid/ThermometerEmpty';\r\nimport {Wind} from '@styled-icons/boxicons-regular/Wind';\r\nimport {Droplet} from '@styled-icons/icomoon/Droplet';\r\n\r\nimport \"./graph.scss\";\r\n\r\ninterface IProps{\r\n    pressure: number;\r\n    humidity: number;\r\n    minTemp:number;\r\n    maxTemp:number;\r\n    wind: number;\r\n}\r\n\r\nconst Graph: React.FC<IProps>=(props)=>{\r\n\r\n    /// converting pressure into %... lowest 900hpa & highest 1100hpa\r\n    const pressure = ((props.pressure-900)/200)*100;\r\n\r\n    // converting temperatures from F to C\r\n    const MinTemp= Math.round(props.minTemp-273.15);\r\n    const MaxTemp = Math.round(props.maxTemp-273.15);\r\n\r\n    // converting temp into %... lowest -60 & highest 70\r\n    const minPerc = Math.round(((MinTemp+50)/130)*100);\r\n    const maxPerc = Math.round(((MaxTemp+50)/130)*100);\r\n\r\n\r\n    return(\r\n        <Container fluid className=\"graph\">\r\n            <Row className=\"graphHeading\">\r\n                <span>Graphical Representaion</span>\r\n            </Row>\r\n            <Row className=\"graphRow\">\r\n                <Col  className=\"col-2 headingSide\">\r\n                    <span>High</span>\r\n                    <span>Medium</span>\r\n                    <span>Low</span>\r\n                </Col>\r\n\r\n                <Col className=\"col-10 graphBars\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <div className=\"progress\">\r\n                                        <span className=\"dashed\"></span>\r\n                                        <span className=\"bar\" style={{height:pressure+\"%\"}}></span>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"progress\">\r\n                                        <span className=\"dashed\"></span>\r\n                                        <span className=\"bar\" style={{height:props.wind+\"%\"}}></span>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"progress\">\r\n                                        <span className=\"dashed\"></span>\r\n                                        <span className=\"bar\" style={{height:props.humidity+\"%\"}}></span>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"progress\">\r\n                                        <span className=\"dashed\"></span>\r\n                                        <span className=\"bar\" style={{height:minPerc+\"%\"}}></span>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"progress\">\r\n                                        <span className=\"dashed\"></span>\r\n                                        <span className=\"bar\" style={{height:maxPerc+\"%\"}}></span>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td><Tachometer size=\"20\"/></td>\r\n                                <td><Wind size=\"20\"/></td>\r\n                                <td><Droplet size=\"20\"/></td>\r\n                                <td><ThermometerEmpty size=\"20\"/></td>\r\n                                <td><ThermometerFull size=\"20\"/></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Graph;","import React from 'react';\r\nimport './popUp.scss';\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\ninterface IProps{\r\n    pop: Function;\r\n    message?: JSX.Element;\r\n}\r\n\r\nconst PopUp: React.FC<IProps>=(props)=>{\r\n\r\n    return(\r\n        <Container fluid className=\"pop\">\r\n            <Row className=\"box\">\r\n                <span onClick={()=>props.pop()}>&times;</span>\r\n                {props.message}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PopUp;","import React, { useState } from 'react';\r\nimport \"./city.scss\";\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport PopUp from '../popUp/popUp';\r\nimport { Link } from 'react-router-dom';\r\nimport Paris from \"../../../image/paris.jpg\";\r\nimport NYC from \"../../../image/nyc.jpg\";\r\nimport Berlin from \"../../../image/berlin.jpg\";\r\n\r\ninterface IState{\r\n    pop: boolean;\r\n}\r\n\r\ninterface IProps{\r\n    city?:boolean;\r\n    num?: number;\r\n}\r\n\r\n\r\nconst City: React.FC<IProps>=(props)=>{\r\n\r\n    const [state, setState]= useState<IState>({\r\n        pop:false\r\n    });\r\n\r\n    const City = [\r\n        {\"city\":\"Paris\", \"country\":\"FR\", \"lat\": 48.8534, \"lon\": 2.3488, \"img\": Paris},\r\n        {\"city\":\"New York\", \"country\":\"US\", \"lat\": 43.0004, \"lon\": -75.4999, \"img\": NYC},\r\n        {\"city\":\"Berlin\", \"country\":\"DE\", \"lat\": 52.52437, \"lon\": 13.41053, \"img\": Berlin}\r\n    ]\r\n\r\n    function popUp(){\r\n        setState({ pop: true});\r\n    }\r\n\r\n    function popDown(){\r\n        setState({pop:false})\r\n    }\r\n\r\n    const message = <p>Sorry. This service is not available right now.</p>\r\n\r\n    if(props.city){\r\n        return(\r\n            <Container fluid className=\"addCity\">\r\n                <Link to={props.num!==undefined?\"/search/\"+City[props.num].lat+\"/\"+City[props.num].lon:\"/\"}>\r\n                    <img className=\"cityBox\" src={props.num!==undefined?City[props.num].img:\"\"} alt={props.num!==undefined?City[props.num].city:\"city\"}/>\r\n                    <span>{props.num!==undefined?City[props.num].city+\", \"+City[props.num].country:null}</span>\r\n                </Link>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Container fluid className=\"addCity\">\r\n            <Row className=\"cityBox\" onClick={()=>popUp()}>\r\n                <span>+</span>\r\n                <span>Add City</span>\r\n            </Row>\r\n            {state.pop?<PopUp message={message} pop={()=>popDown()}/>:null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default City;","import React from 'react';\r\nimport './searchBox.scss';\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface IProps{\r\n    search: string;\r\n    data: any[];\r\n    unclicked: Function;\r\n    noResult?:boolean;\r\n}\r\n\r\n\r\n\r\nconst SearchBox: React.FC<IProps>=(props)=>{\r\n\r\n    if(props.data === undefined){\r\n        return(\r\n            <div className=\"search\">\r\n                <div className=\"rowSearch\">\r\n                    <span className=\"heading\">{\"Search Results for \"+ props.search}</span>\r\n                    <div className=\"failed\">Loading... please wait</div>\r\n                    <span className=\"cancel\" onClick={()=>props.unclicked()}>Cancel</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(props.data.length<1){\r\n        return(\r\n            <div className=\"search\">\r\n                <div className=\"rowSearch\">\r\n                    <span className=\"heading\">{\"Search Results for \"+ props.search}</span>\r\n                    <div className=\"failed\">{props.noResult?\"No results found\":\"Loading... please wait\"}</div>\r\n                    <span className=\"cancel\" onClick={()=>props.unclicked()}>Cancel</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(props.data[0].sys.country===undefined){\r\n        return(\r\n            <div className=\"search\">\r\n                <div className=\"rowSearch\">\r\n                    <span className=\"heading\">{\"Search Results for \"+ props.search}</span>\r\n                    <div className=\"failed\">Loading... please wait</div>\r\n                    <span className=\"cancel\" onClick={()=>props.unclicked()}>Cancel</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"search\">\r\n            <div className=\"rowSearch\">\r\n                <span className=\"heading\">{\"Search Results for \"+ props.search}</span>\r\n                <div className=\"result\">\r\n                    {props.data.map(item=>(\r\n                        <Link className=\"data\" onClick={()=>props.unclicked()} to={\"/search/\"+item.coord.lat+\"/\"+item.coord.lon}>{item.name+\", \"+item.sys.country}</Link>\r\n                    ))}\r\n                </div>\r\n                <span className=\"cancel\" onClick={()=>props.unclicked()}>Cancel</span>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default SearchBox;","import React, { useState, ChangeEvent, KeyboardEvent } from 'react';\r\nimport './navBar.scss';\r\nimport { Container, Row, Col, Dropdown } from 'react-bootstrap';\r\nimport {Search} from '@styled-icons/evil/Search';\r\nimport PopUp from '../popUp/popUp';\r\nimport SearchBox from '../search/searchBox';\r\nimport api from '../../../api';\r\n\r\ninterface IState{\r\n    changed: boolean;\r\n}\r\n\r\ninterface IClick{\r\n    clicked: boolean;\r\n}\r\n\r\ninterface ISearch{\r\n    search:string;\r\n}\r\n\r\ninterface IPop{\r\n    pop:boolean;\r\n}\r\n\r\ninterface IData{\r\n    data:any;\r\n    code: string;\r\n    count: number;\r\n}\r\n\r\ninterface IMsg{\r\n    msg:JSX.Element;\r\n}\r\n\r\nconst NavBar: React.FC=()=>{\r\n\r\n    const [state, setState]= useState<IState>({changed:false});\r\n    const [click, setClick] = useState<IClick>({clicked: false});\r\n    const [search, setSearch] = useState<ISearch>({ search:\"\"});\r\n    const [getPop, setPop] = useState<IPop>({pop:false});\r\n    const [data,setData] = useState<IData>({data:\"\", code:\"\", count:0});\r\n    const [msg, setMsg] = useState<IMsg>({msg:<span></span>})\r\n\r\n    let msg1 = <p>Sorry. This service is not available right now.</p>\r\n    let msg2 = <p>Developed by: <a href=\"https://findazee.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Abdul Zahir</a></p>\r\n\r\n    function popUp(msg: JSX.Element){\r\n        setPop({pop:true});\r\n        setMsg({msg:msg})\r\n    }\r\n\r\n    function popDown(){\r\n        setPop({pop:false});\r\n    }\r\n\r\n    function entering(e:KeyboardEvent){\r\n        if(e.charCode===13){\r\n            e.preventDefault();\r\n            clicked();\r\n          }\r\n    }\r\n\r\n    function changed(e:ChangeEvent<HTMLInputElement>){\r\n        setSearch({search: e.target.value});\r\n        \r\n        if(e.target.value===null||e.target.value===\"\"||e.target.value===undefined){\r\n            setState({...state, changed: false})\r\n        }else{\r\n            setState({...state, changed: true});\r\n        }\r\n    }\r\n\r\n    function clicked(){\r\n        if(state.changed){\r\n            setClick({\r\n                clicked: true\r\n            })\r\n            api.find(data=>setData({data:data, code: data.cod, count: data.count}), search.search);\r\n        }\r\n    }\r\n\r\n    function unclicked(){\r\n        setClick({clicked: false});\r\n        setData({data:\"\", code:\"\", count:0});\r\n    }\r\n\r\n    return(\r\n        <Container fluid className=\"navBar\">\r\n            <Row className=\"navRow\">\r\n                <Col sm={{span:7}} className=\"searchArea\">\r\n                    <span className=\"searchIcon\" ><Search size=\"30\"/></span>\r\n                    <input type=\"text\" className=\"searchBox\" placeholder=\"Search new place\"\r\n                    onChange={(e)=>changed(e)} onKeyPress={(e)=>entering(e)} />\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                            All places\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item href=\"/\">Service unavailable</Dropdown.Item>\r\n                            <Dropdown.Item href=\"/\">Service unavailable</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Col>\r\n                <Col sm={{span:5}} className=\"profileArea\">\r\n                    <span className=\"noti\" onClick={()=>popUp(msg1)}>Notifications</span>\r\n                    <span className=\"places\" onClick={()=>popUp(msg1)}>Places</span>\r\n                    <img className=\"image\" src={require(\"../../../image/myAvatar.png\")} alt=\"profile\" onClick={()=>popUp(msg2)}/>\r\n                </Col>\r\n            </Row>\r\n            {getPop.pop?<PopUp message={msg.msg} pop={()=>popDown()}/>:null}\r\n\r\n            {click.clicked?\r\n            <SearchBox search={search.search} data={data.data.list} \r\n            noResult ={data.code===\"200\"&&data.count===0} \r\n            unclicked={()=>unclicked()}/> :null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport \"./forecast.scss\";\r\n\r\nimport {Droplet} from '@styled-icons/icomoon/Droplet';\r\nimport Icon from '../icon/icon';\r\n\r\ninterface IProps{\r\n    forecast:any;\r\n    day: number;\r\n}\r\n\r\nconst FullDay = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nlet day: any[]=[];\r\nlet min: number[]=[];\r\nlet max: number[]=[];\r\n\r\nconst Forecast: React.FC<IProps>=(props)=>{\r\n\r\n    if(props.forecast.list===undefined){\r\n        return null;\r\n    }\r\n\r\n\r\n   for (let i=1; i<6; i++){\r\n        if(day.length===5){\r\n            day.splice(0, day.length);\r\n            min.splice(0,min.length);\r\n            max.splice(0,max.length);\r\n        }\r\n        day.push(props.forecast.list[i*5]);\r\n        min.push(Math.round(((props.forecast.list[i*5].main.temp_min-273.15+50)/130)*100));\r\n        max.push(Math.round(((props.forecast.list[i*5].main.temp_max-273.15+50)/130)*100));\r\n   }\r\n\r\n    return(\r\n        <Container fluid className=\"forecast\">\r\n            <Row>\r\n                <table>\r\n                    <tbody>\r\n                        {day.map((item, index)=>\r\n                            <tr className=\"week\">\r\n                                <td className=\"day\">{FullDay[(props.day+index)>6?0:(props.day+index)]}</td>\r\n                                <td className=\"colorGray\"><Droplet size=\"15\" color=\"#4293eb\"/> {item.main.humidity+\"%\"}</td>\r\n                                <td className=\"icon\"><Icon size=\"25\" type=\"d\" condition={item.weather[0].main} /></td>\r\n                                <td className=\"colorGray\">{Math.round(item.main.temp_min-273.15)}<span>&deg;C</span></td>\r\n                                <td className=\"minBar\">\r\n                                    <div className=\"dashed\"></div>\r\n                                    <div className=\"bar\" style={{width:min[index]+\"%\"}}></div>\r\n                                </td>\r\n                                <td className=\"maxBar\">\r\n                                    <div className=\"dashed\"></div>\r\n                                    <div className=\"bar\" style={{width:max[index]+\"%\"}}></div>\r\n                                </td>\r\n                                <td className=\"maximum\">{Math.round(item.main.temp_max-273.15)}<span>&deg;C</span></td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </Row>\r\n        \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Forecast;","import { Tabs, Tab } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport Forecast from '../forecast/forecast';\r\nimport './tabs.scss';\r\n\r\ninterface IProps{\r\n    data: any;\r\n    day: number;\r\n}\r\n\r\n\r\nconst TabView: React.FC<IProps>=(props)=>{\r\n    return(\r\n        <Tabs defaultActiveKey=\"5day\" className=\"tabDiv\" id=\"tabDiv\">\r\n            <Tab className=\"tabCustom\" eventKey=\"5day\" title=\"5-Days\">\r\n                <Forecast forecast={props.data} day={props.day}/>\r\n            </Tab>\r\n\r\n            <Tab className=\"tabCustom paddingTop\" eventKey=\"hourly\" title=\"Hourly\">\r\n                <h4>Sorry. This service is not available at the moment.</h4>\r\n            </Tab>\r\n\r\n            <Tab className=\"tabCustom paddingTop\" eventKey=\"monthly\" title=\"Monthly\">\r\n                <h4>Sorry. This service is not available at the moment.</h4>\r\n            </Tab>\r\n\r\n            <Tab className=\"tabCustom paddingTop\" eventKey=\"6month\" title=\"6 months\">\r\n                <h4>Sorry. This service is not available at the moment.</h4>\r\n            </Tab>\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default TabView;","import React, {Component } from 'react';\r\nimport api from '../../../api';\r\nimport Temp from '../../atoms/temp/temp';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\nimport Graph from '../../atoms/graph/graph';\r\n\r\nimport './weather.scss';\r\nimport City from '../../atoms/city/city';\r\nimport NavBar from '../../atoms/navBar/navBar';\r\nimport TabView from '../../atoms/tabs/tabs';\r\n\r\ninterface IProps{\r\n    long:number;\r\n    lat:number;\r\n    found:boolean;\r\n}\r\n\r\ninterface IState{\r\n    data: any;\r\n    forecast:any;\r\n    found: boolean;\r\n    lat:number;\r\n    long:number;\r\n}\r\n\r\nconst DAY = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nconst MONTH = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\nclass Weather extends Component<IProps, IState>{\r\n    constructor(props:IProps){\r\n        super(props);\r\n        this.state = {\r\n            found: false,\r\n            data:[],\r\n            forecast:[],\r\n            lat:0.0,\r\n            long:0.0,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.state.found){\r\n            api.today(data=>this.setState({data:data}), this.props.lat, this.props.long);\r\n            api.today(data=>this.setState({forecast:data}), this.props.lat, this.props.long);\r\n            if(this.props.found){\r\n                this.setState({found:true});\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(!this.state.found && this.props.found){\r\n            api.today(data=>this.setState({data:data}), this.props.lat, this.props.long);\r\n            api.forecast(data=>this.setState({forecast:data}), this.props.lat, this.props.long);\r\n            if(this.props.found){\r\n                this.setState({found:true});\r\n            }\r\n        }\r\n\r\n        if(this.state.lat !== this.props.lat || this.state.long !== this.props.long){\r\n            this.setState({lat: this.props.lat, long: this.props.long})\r\n            api.today(data=>this.setState({data:data}), this.props.lat, this.props.long);\r\n            api.forecast(data=>this.setState({forecast:data}), this.props.lat, this.props.long);\r\n        }\r\n    }\r\n    \r\n\r\nrender(){\r\n    if(this.state.data.sys===undefined || this.state.data.sys.sunrise===undefined){\r\n        return null;\r\n    }\r\n\r\n    //////////////////////timezone\r\n    var zoneHours = Math.floor(this.state.data.timezone/3600);\r\n    var zoneMinutes = Math.floor(this.state.data.timezone%3600/60);\r\n    var todayUTC = new Date( new Date().getTime() + (zoneHours * 3600 * 1000)).toUTCString().replace( / GMT$/, \"\" );\r\n\r\n    /// today date/day/month\r\n    var today = new Date(todayUTC);\r\n    var day = today.getDay();\r\n    var date = today.getDate();\r\n    var month = today.getMonth();\r\n    \r\n    return(\r\n        <Container fluid className=\"weather\">\r\n            <Row className=\"navigation\"><NavBar/></Row>\r\n            <Row className = \"mainRow\">\r\n                <Col lg={7} className=\"future paddingTop sidePaddings\">\r\n                    <Row className=\"heading\"><span>Weather <b>4cast</b></span></Row>\r\n                    <Row className=\"city paddingTop\">\r\n                        <Col sm={{span:3}}><City num={2} city={true}/></Col>\r\n                        <Col sm={{span:3}}><City num={0} city={true}/></Col>\r\n                        <Col sm={{span:3}}><City num={1} city={true}/></Col>\r\n                        <Col sm={{span:3}}><City/></Col>\r\n                    </Row>\r\n                    <Row className=\"table4cast paddingTop\">\r\n                        <TabView data={this.state.forecast} day={day+1}/>\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col lg={5} className=\"current paddingTop\">\r\n                    <Row className=\"rowTemp\" style={{margin:\"0\"}}>\r\n                        <Temp city={this.state.data.name} \r\n                        country={this.state.data[\"sys\"].country} \r\n                        temp={this.state.data[\"main\"].temp} \r\n                        feel={this.state.data[\"main\"].feels_like} \r\n                        icon={this.state.data.weather[\"0\"].icon}\r\n                        sunrise={this.state.data[\"sys\"].sunrise}\r\n                        sunset={this.state.data[\"sys\"].sunset}\r\n                        condition={this.state.data.weather[\"0\"].main}\r\n                        day={DAY[day]} month={MONTH[month]} date={date} minutes={zoneMinutes} hours={zoneHours}/>\r\n                    </Row>\r\n                    <Row className=\"rowGraph sidePaddings\">\r\n                        <Graph pressure={this.state.data[\"main\"].pressure} \r\n                        humidity={this.state.data[\"main\"].humidity}\r\n                        minTemp={this.state.data[\"main\"].temp_min}\r\n                        maxTemp={this.state.data[\"main\"].temp_max}\r\n                        wind={this.state.data.wind.speed}/>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n    \r\n}\r\n\r\n\r\nexport default Weather;","import React, { useState } from 'react';\r\nimport Weather from '../molecules/weather/weather';\r\nimport './landing.scss';\r\n\r\ninterface IState{\r\n  counter:boolean;\r\n    latitude: number;\r\n    longitude: number;\r\n    found:boolean;\r\n    watch:null | number; // it may have these types\r\n}\r\n\r\ninterface IProps{\r\n  lat:string | undefined;\r\n  long:string | undefined;\r\n}\r\n\r\n\r\nconst Landing: React.FC=()=>{\r\n\r\n  let [state, setState] = useState<IState>({\r\n    longitude: -122.0400,\r\n    latitude: 37.3700,\r\n    found:false,\r\n    watch: null,\r\n    counter:false\r\n  });\r\n\r\n  let watch=0;\r\n  if(!state.found){ // it was keep refreshing the page so i had to stop it by force\r\n    watch = navigator.geolocation.watchPosition(position=>{\r\n      setState({\r\n        ...state, // remaining states doesnt change their values\r\n        latitude: position.coords.latitude,\r\n        longitude: position.coords.longitude,\r\n        found:true\r\n      })\r\n    },error => console.log(error))\r\n  }\r\n\r\n  if(state.found){\r\n    navigator.geolocation.clearWatch(watch); // need to clear watch or else it will keep watching and refreshing coords\r\n  }\r\n\r\n  return(\r\n    <div className=\"landing\">\r\n      <Weather lat={state.latitude} long={state.longitude} found={state.found}/>\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport Weather from '../molecules/weather/weather';\r\nimport './landing.scss';\r\n\r\ninterface IProps{\r\n    lat:string ;\r\n    long:string ;\r\n  }\r\n\r\nconst Search: React.FC<RouteComponentProps<IProps>>=(props)=>{\r\n\r\n    return (\r\n      <div className=\"landing\">\r\n        <Weather lat={parseFloat(props.match.params.lat)} long={parseFloat(props.match.params.long)} found={false}/>\r\n      </div>    \r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Landing from './pages/landing';\r\nimport Search from \"./pages/search\";\r\n\r\n\r\nfunction Routes(){\r\n    return(\r\n        <Switch>\r\n            <Route exact path={\"/\"} component={Landing}/>\r\n            <Route path={\"/search/:lat/:long\"} component={Search}/>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.scss';\nimport Routes from './components/routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\nimport \"typeface-questrial\";\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <App />\n                </BrowserRouter>, \n                document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/paris.a632fd2a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nyc.188250c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/berlin.b36c44e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/myAvatar.b80163c5.png\";"],"sourceRoot":""}